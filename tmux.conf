### General

# use Ctrl-a as the prefix
unbind C-b
set -g prefix C-a

# fix terminal colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# set terminal title
set -g set-titles on
set -g set-titles-string '#S: #W'

# increase scrollback lines
set -g history-limit 50000

# status bar settings (utf8, message display time[ms], update interval)
set -g status-interval 5
set -g display-time 4000

# start window and pane numbers at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# keep window names fixed
set -g allow-rename off

# use focus events
set -g focus-events on

# monitor windows for any activity
set-window-option -g monitor-activity on

# mouse behavior
set -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# better re-sizing
set-window-option -g aggressive-resize on



### KEY BINDINGS

# send C-a by pressing it twice
bind-key C-a send-prefix

# switch to last window
bind-key a last-window

# reload
bind-key R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# splits and windows
bind-key v split-window -h
bind-key h split-window -v
bind-key C-v split-window -h -p 25
bind-key C-h split-window -v -p 25

# bind-key L clear-history

# vim like bindings
set-window-option -g mode-keys vi
set -s escape-time 0
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel

# easier switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window



### COLOR THEME

set -g message-command-style fg=colour117,bg=colour59
set -g message-style bg=colour59,fg=colour117

set -g pane-active-border-style fg=colour215
set -g pane-border-style fg=colour59

# colour15
# colour16
# colour59
# colour61
# colour84
# colour117
# colour141
# colour160
# colour215
# colour228
# colour236


set -g status on
set -g status-position top
set -g status-style fg=colour15,bg=colour59,none
set -g status-left "#{?client_prefix,#[fg=colour236#,bg=colour84],#[fg=colour236#,bg=colour141]} #S #[fg=colour15,bg=colour59,none] "
set -g status-left-length 50
set -g status-left-style bold
# set -g status-right " â™« #(itunes-current-track) #[fg=colour15,bg=colour61,none] #h #{?client_prefix,#[fg=colour236#,bg=colour84#,bold],#[fg=colour236#,bg=colour141#,bold]} %Y-%m-%d | %I:%M %p "
set -g status-right "#[fg=colour15,bg=colour61,none] #h #{?client_prefix,#[fg=colour236#,bg=colour84#,bold],#[fg=colour236#,bg=colour141#,bold]} %Y-%m-%d | %I:%M %p "
set -g status-right-length 100
set -g status-right-style fg=colour15,bg=colour59,none

set -g window-status-current-style fg=colour215,none
set -g window-status-activity-style fg=colour117,none
set -g window-status-bell-style fg=colour160,none
setw -g window-status-style fg=colour15,none



### PLUGINS

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# run "$HOME/.tmux/plugins/tpm/tpm"



### PLUGIN OPTIONS

# set -g @continuum-restore 'on'
# set -g @resurrect-strategy-vim 'session'



### LOCAL OPTIONS

if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

